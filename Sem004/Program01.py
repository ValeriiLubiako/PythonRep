# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.
#
#
#  Исходные данные (длины наборов целых чисел и сами эти наборы) будем вводить с консоли
#  через генератор списков (List Comprehension)
#  Данные вводятся поэлементно через пробел в символьную строку, затем из строки переносятся в список
#  используя функцию split. Делаться это будет в цикле, всего будут три цикла - один для ввода количества
#  чисел в наборах данных и по одному для ввода самих наборов данных
#  После заполнения списков на основе их значений ваыполняется проверка на корректность ввода
#  (проверяется равна ли длина реально введенного списка изначально введенной величине, после чего либо выдается диагностическое собщение,
#  если выявлено несоответствие, либо, для продолжения решения задачи,  заполняются значения множеств (таким образом избавляемся от
#  возможного дублироваия значений в исходных наборах чисел.
# Далее пересекаем полученные множества и результирующее множество, применяя функцию сортировки, выводим на
# консоль в порядке возрастания.
#
#
print("Введите кол-ва элементов в массивах (через пробел)")
nm = [int(x) for x in input().split()]
n = nm[0]
m = nm[1]

print("Введите элементы первого массива(набора чисел):")

list1 = [int(x) for x in input().split()]
set1 = set(list1)

print("Введите элементы второго массива(набора чисел):")
list2 = [int(x) for x in input().split()]
set2 = set(list2)

if len(list1) != n:
    print("Первый массив (набор данных) введен с ошибкой")
elif len(list2) != m:
    print("Второй массив (набор данных) введен с ошибкой")
else:

    intersection = set1 & set2
    result = list(intersection)
    result.sort()
    print("В обоих массивах встречаются :")
    print(*result)
